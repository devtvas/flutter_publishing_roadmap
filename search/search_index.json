{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"00-objetivos.html","title":"Objetivos","text":"<p>Transformar voc\u00ea em Especialista em Publica\u00e7\u00e3o Flutter (Android &amp; iOS), do preflight \u00e0 automa\u00e7\u00e3o de release, incluindo Fastlane, CI/CD, white\u2011label e playbook de rejei\u00e7\u00f5es.</p> <p>Como usar</p> <p>Leia em ordem. Execute os passos pr\u00e1ticos, copie os trechos de c\u00f3digo e ajuste os placeholders (<code>com.your.app</code>, <code>Your App</code>).</p>"},{"location":"05-getting-started.html","title":"Getting Started","text":""},{"location":"05-getting-started.html#1-requisitos-locais","title":"1) Requisitos locais","text":"<ul> <li>macOS com Xcode (para iOS) e Android Studio/SDKs (para Android).</li> <li>Python 3.x e <code>pip</code>.</li> <li>Ruby + Bundler (para Fastlane) e Git.</li> </ul>"},{"location":"05-getting-started.html#2-instalar-as-ferramentas-de-docs","title":"2) Instalar as ferramentas de docs","text":"<pre><code>pip install mkdocs-material mike\n</code></pre>"},{"location":"05-getting-started.html#3-clonar-e-servir-docs","title":"3) Clonar e servir (docs)","text":"<pre><code>git clone &lt;seu-repo-docs&gt;.git\ncd &lt;seu-repo-docs&gt;\nmkdocs serve\n# http://127.0.0.1:8000\n</code></pre>"},{"location":"05-getting-started.html#4-publicar-as-docs-github-pages","title":"4) Publicar as docs (GitHub Pages)","text":"<pre><code>mkdocs gh-deploy\n</code></pre>"},{"location":"05-getting-started.html#5-checklist-rapido-do-app","title":"5) Checklist r\u00e1pido do app","text":"<ul> <li>[ ] Contas: App Store Connect + Play Console</li> <li>[ ] Keystore (Upload Key) &amp; Play App Signing habilitado</li> <li>[ ] Team iOS configurado / Certificados via match</li> <li>[ ] <code>GoogleService-Info.plist</code> / <code>google-services.json</code> guardados como secrets</li> </ul>"},{"location":"10-resultado.html","title":"Resultado esperado (Definition of Done)","text":"<ul> <li>Publicar com automa\u00e7\u00e3o ponta a ponta (Fastlane + CI/CD).</li> <li>Operar white\u2011label em escala (flavors, \u00edcones, bundle IDs por cliente).</li> <li>Responder a rejei\u00e7\u00f5es com playbook + respostas\u2011modelo.</li> <li>Rodar p\u00f3s\u2011publica\u00e7\u00e3o: m\u00e9tricas, ANR/Crash, staged rollout e rollback.</li> </ul>"},{"location":"15-pre-requisitos.html","title":"Pr\u00e9\u2011requisitos","text":"<ul> <li>Apple Developer Program + App Store Connect com acesso de App Manager.</li> <li>Google Play Console com permiss\u00f5es para criar releases.</li> <li>Flutter est\u00e1vel; Xcode e Android Studio atualizados.</li> <li>Ruby + Bundler + Fastlane (macOS).</li> <li>Contas de teste: TestFlight e Internal testing (Play).</li> </ul> <p>Tip</p> <p>Credenciais somente como secrets do CI/CD ou em <code>.env</code> ignorado no reposit\u00f3rio.</p>"},{"location":"20-estrutura-white-label.html","title":"Estrutura White\u2011label &amp; Schemes","text":""},{"location":"20-estrutura-white-label.html#android-flavors","title":"Android (flavors)","text":""},{"location":"20-estrutura-white-label.html#androidappbuildgradle-trecho","title":"<code>android/app/build.gradle</code> (trecho)","text":"<pre><code>android {\n  defaultConfig {\n    applicationId \"com.your.app\"\n    versionCode flutterVersionCode.toInteger()\n    versionName flutterVersionName\n  }\n\n  flavorDimensions \"brand\"\n  productFlavors {\n    prod {\n      dimension \"brand\"\n      applicationId \"com.your.app\"\n    }\n    clientA {\n      dimension \"brand\"\n      applicationId \"com.clientA.app\"\n      resValue \"string\", \"app_name\", \"ClientA\"\n    }\n    clientB {\n      dimension \"brand\"\n      applicationId \"com.clientB.app\"\n      resValue \"string\", \"app_name\", \"ClientB\"\n    }\n  }\n\n  buildTypes {\n    release {\n      // signingConfigs.release configurado via keystore OU Play App Signing\n      minifyEnabled true\n      shrinkResources true\n      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n    }\n  }\n}\n</code></pre>"},{"location":"20-estrutura-white-label.html#keystore-quando-necessario","title":"Keystore (quando necess\u00e1rio)","text":"<pre><code>keytool -genkey -v \\\n -keystore app-upload.keystore -alias upload \\\n -keyalg RSA -keysize 2048 -validity 10000\n</code></pre> <p>Use Upload Key local e habilite Play App Signing. Guarde o <code>.keystore</code> como secret no CI.</p>"},{"location":"20-estrutura-white-label.html#ios-schemes-xcconfigs","title":"iOS (schemes + xcconfigs)","text":"<ol> <li>Crie Schemes: <code>Runner-prod</code>, <code>Runner-clientA</code>, <code>Runner-clientB</code>.</li> <li>Em <code>ios/</code> adicione <code>Configs/Prod.xcconfig</code>, <code>Configs/ClientA.xcconfig</code>: <pre><code>PRODUCT_BUNDLE_IDENTIFIER = com.your.app\nDISPLAY_NAME = Your App\n</code></pre></li> <li>Duplique \u00edcones por target (AppIcon-prod, AppIcon-clientA\u2026).  </li> <li>Signing: autom\u00e1tico com team correto ou via Fastlane Match.</li> </ol>"},{"location":"30-runbook.html","title":"Runbook \u2014 Release manual","text":""},{"location":"30-runbook.html#android","title":"Android","text":"<p><pre><code># 1) Atualize vers\u00e3o no pubspec.yaml\nflutter pub get\n# 2) Build\nflutter build appbundle --flavor prod --target lib/main_prod.dart --release\n# 3) Opcional: Internal App Sharing\n# ./gradlew :app:uploadInternalSharingBundle\n</code></pre> - Play Console \u2192 escolha a track (internal/closed/open/prod), defina rollout gradual e notas.</p>"},{"location":"30-runbook.html#ios","title":"iOS","text":"<p><pre><code># 1) Preparar pods\ncd ios &amp;&amp; bundle exec pod install &amp;&amp; cd ..\n# 2) Build IPA\nflutter build ipa --flavor prod --release \\\n  --export-options-plist=ios/ExportOptions.plist\n# 3) Alternativa: Xcode (Archive \u2192 Distribute \u2192 App Store Connect)\n</code></pre> - App Store Connect \u2192 crie a build, preencha metadados, App Privacy e envie para revis\u00e3o.</p>"},{"location":"40-fastlane-guide.html","title":"Fastlane Guide","text":""},{"location":"40-fastlane-guide.html#estrutura-sugerida","title":"Estrutura sugerida","text":"<pre><code>fastlane/\n  Appfile\n  Fastfile\n  Deliverfile (iOS) / Supplyfile (Android)\n  metadata/ (descri\u00e7\u00f5es, keywords, release notes)\n</code></pre>"},{"location":"40-fastlane-guide.html#fastfile-exemplo-resumido","title":"Fastfile (exemplo resumido)","text":"<pre><code>default_platform(:ios)\n\nplatform :ios do\n  lane :match_setup do\n    match(type: \"appstore\", readonly: false)\n  end\n\n  lane :beta do\n    match(type: \"appstore\")\n    gym(scheme: \"Runner-prod\", export_method: \"app-store\")\n    pilot(skip_waiting_for_build_processing: true)\n  end\n\n  lane :release do\n    match(type: \"appstore\")\n    gym(scheme: \"Runner-prod\", export_method: \"app-store\")\n    deliver(submit_for_review: true, force: true)\n  end\nend\n\nplatform :android do\n  lane :beta do\n    gradle(task: \"bundle\", build_type: \"Release\", flavor: \"prod\")\n    supply(track: \"internal\",\n           aab: \"app/build/outputs/bundle/prodRelease/app-prod-release.aab\")\n  end\n\n  lane :release do\n    gradle(task: \"bundle\", build_type: \"Release\", flavor: \"prod\")\n    supply(track: \"production\", rollout: 0.1,\n           aab: \"app/build/outputs/bundle/prodRelease/app-prod-release.aab\")\n  end\nend\n</code></pre>"},{"location":"40-fastlane-guide.html#screenshots-automatizados","title":"Screenshots automatizados","text":"<ul> <li>iOS: <code>snapshot</code> com UI tests \u2192 gera screenshots por idioma/dispositivo.</li> <li>Android: <code>screengrab</code> via Espresso \u2192 captura por resolu\u00e7\u00e3o.</li> <li>Use <code>frameit</code> para emoldurar.</li> </ul>"},{"location":"50-cicd-guide.html","title":"CI/CD Guide (GitHub Actions)","text":"<pre><code>name: release\non:\n  workflow_dispatch:\n    inputs:\n      platform:\n        description: 'ios|android'\n        required: true\n        default: 'android'\n\njobs:\n  build_release:\n    runs-on: macos-14\n    steps:\n      - uses: actions/checkout@v4\n      - uses: subosito/flutter-action@v2\n        with: { flutter-version: 'stable' }\n      - name: Install Ruby &amp; Bundler\n        run: |\n          gem install bundler:2.5.9\n          bundle install\n      - name: Decrypt secrets (ex.: match repo, keystore)\n        run: ./scripts/decrypt_secrets.sh\n      - name: Pub get\n        run: flutter pub get\n      - name: Android lane\n        if: ${{ inputs.platform == 'android' }}\n        run: bundle exec fastlane android release\n        env:\n          SUPPLY_JSON_KEY_DATA: ${{ secrets.GPLAY_SERVICE_ACCOUNT_JSON }}\n      - name: iOS lane\n        if: ${{ inputs.platform == 'ios' }}\n        run: bundle exec fastlane ios release\n        env:\n          APP_STORE_CONNECT_API_KEY: ${{ secrets.ASC_API_KEY_JSON }}\n</code></pre> <p>Seguran\u00e7a</p> <p>Guarde <code>*.keystore</code>, <code>GoogleService-Info.plist</code>, <code>google-services.json</code>, perfis/certificados (match) como secrets. Nunca commitar.</p>"},{"location":"60-playbook-rejeicoes.html","title":"Playbook de Rejei\u00e7\u00f5es","text":""},{"location":"60-playbook-rejeicoes.html#ios-causas-comuns-acoes","title":"iOS \u2013 Causas comuns &amp; A\u00e7\u00f5es","text":"<ul> <li>2.1 \u2013 App Completeness: falta conta de teste, fluxo quebrado.</li> <li>A\u00e7\u00e3o: anexe credenciais de teste, v\u00eddeo curto e instru\u00e7\u00f5es.</li> <li>2.3 \u2013 Metadata: screenshots prometem algo que o app n\u00e3o tem.</li> <li>A\u00e7\u00e3o: alinhar screenshots/descri\u00e7\u00e3o ao app real.</li> <li>5.1 \u2013 Privacidade: coleta n\u00e3o declarada; uso de Required Reason APIs.</li> <li>A\u00e7\u00e3o: atualizar App Privacy e Privacy Manifest; explicar prop\u00f3sito in\u2011app.</li> <li>3.1 \u2013 Pagamentos: paywall/link externo sem IAP quando obrigat\u00f3rio.</li> <li>A\u00e7\u00e3o: adequar o fluxo (IAP ou elegibilidade para link externo conforme pol\u00edtica).</li> </ul>"},{"location":"60-playbook-rejeicoes.html#android-causas-comuns-acoes","title":"Android \u2013 Causas comuns &amp; A\u00e7\u00f5es","text":"<ul> <li>User Data / Data safety inconsistente com SDKs.</li> <li>A\u00e7\u00e3o: revisar SDKs e atualizar formul\u00e1rio + pol\u00edtica de privacidade.</li> <li>Permiss\u00f5es sens\u00edveis (localiza\u00e7\u00e3o/foreground/background).</li> <li>A\u00e7\u00e3o: solicitar apenas quando necess\u00e1rio e com justificativa in\u2011app.</li> <li>Deceptive behavior / Metadata (palavras\u2011chave enganosas).</li> <li>A\u00e7\u00e3o: limpar listing e manter foco/coer\u00eancia.</li> </ul> <p>Sempre responda objetivamente, eduque o revisor e anexe evid\u00eancias (v\u00eddeo, capturas, logs).</p>"},{"location":"70-modelos-resposta.html","title":"Modelos de Resposta","text":"<p>iOS \u2013 Privacidade (exemplo):</p> <p>Atualizamos a se\u00e7\u00e3o App Privacy para refletir com precis\u00e3o a coleta e uso de dados. Inclu\u00edmos o Privacy Manifest indicando os Required Reason APIs utilizados para diagn\u00f3stico. Adicionamos um in\u2011app notice descrevendo prop\u00f3sito e op\u00e7\u00e3o de opt\u2011out. Um v\u00eddeo de 30s foi anexado demonstrando o fluxo.</p> <p>Android \u2013 Data safety (exemplo):</p> <p>Revisamos o formul\u00e1rio Data safety com base nos SDKs utilizados e removemos a coleta desnecess\u00e1ria. Garantimos que os dados declarados correspondem ao comportamento do app. Atualizamos a pol\u00edtica de privacidade e anexamos evid\u00eancias.</p>"},{"location":"80-tabela-controle.html","title":"Tabela de Controle","text":"Item Status Observa\u00e7\u00f5es Flavors Android/iOS \u00cdcones por flavor Keystore + Play App Signing Match (iOS) Lanes beta/release Screenshots autom\u00e1ticos App Privacy / Data Safety TestFlight / Internal testing CI/CD macOS Staged rollout Playbook rejei\u00e7\u00f5es"},{"location":"90-checklist-final.html","title":"Checklist Final (pronto para publicar)","text":"<ul> <li>[ ] Vers\u00e3o no <code>pubspec.yaml</code> atualizada (SemVer + build)</li> <li>[ ] Lanes Fastlane OK (beta/release)</li> <li>[ ] App Privacy &amp; Data Safety revisados</li> <li>[ ] TestFlight / Internal track validados</li> <li>[ ] Rollout inicial 5\u201310% configurado</li> <li>[ ] Plano de rollback documentado</li> </ul>"},{"location":"98-snippets.html","title":"Snippets \u00fateis","text":""},{"location":"98-snippets.html#bump-de-versao-dart","title":"Bump de vers\u00e3o (Dart)","text":"<pre><code>// tool/version.dart\nimport 'dart:io';\nvoid main(List&lt;String&gt; args){\n  // Ex.: dart run tool/version.dart 1.4.0 123\n  final v = args[0];\n  final b = args[1];\n  final pub = File('pubspec.yaml');\n  final t = pub.readAsStringSync()\n      .replaceAll(RegExp(r'version: .*'), 'version: $v+$b');\n  pub.writeAsStringSync(t);\n}\n</code></pre>"},{"location":"98-snippets.html#exportoptionsplist-ios","title":"ExportOptions.plist (iOS)","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;\n&lt;plist version=\"1.0\"&gt;&lt;dict&gt;\n  &lt;key&gt;method&lt;/key&gt;&lt;string&gt;app-store&lt;/string&gt;\n  &lt;key&gt;compileBitcode&lt;/key&gt;&lt;false/&gt;\n  &lt;key&gt;destination&lt;/key&gt;&lt;string&gt;export&lt;/string&gt;\n  &lt;key&gt;manageAppVersionAndBuildNumber&lt;/key&gt;&lt;true/&gt;\n&lt;/dict&gt;&lt;/plist&gt;\n</code></pre>"}]}